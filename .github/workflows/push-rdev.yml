name: Push Remote Dev

on:
  push:
    branches:
      - 'dev-*'
  delete:
    branches:
      - 'dev-*'

env:
  # Force using BuildKit instead of normal Docker, required so that metadata
  # is written/read to allow us to use layers of previous builds as cache.
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1
  DOCKER_REPO: ${{ secrets.ECR_REPO }}/

jobs:
  create-update-dev:
    name: deploy dev branch
    runs-on: ubuntu-latest
    if: github.repository == 'chanzuckerberg/napari-hub'
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 900
      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ECR_REPO }}
      - name: Set up docker build environment
        run: |
          if [[ ${#GITHUB_REF_NAME} -gt 32 ]]; then
            echo "branch name: ${GITHUB_REF_NAME}, length ${#GITHUB_REF_NAME}, is $((${#GITHUB_REF_NAME} - 32)) characters too long, please use a branch name that's 32 characters or shorter"
            exit 1
          else 
            echo STACK_NAME=${GITHUB_REF_NAME#dev-} >> $GITHUB_ENV
            echo DOCKER_TAG=${GITHUB_REF_NAME} >> $GITHUB_ENV
          fi
      - name: Create update dev
        if: ${{ github.event_name == 'push' }}
        uses: chanzuckerberg/github-actions/.github/actions/deploy-happy-stack@v1.4.0
        with:
          stack-name: ${{ env.STACK_NAME }}
          create-tag: "true"
          tag: ${{ env.DOCKER_TAG }}
          tfe-token: ${{ secrets.TFE_TOKEN }}
          env: "dev"
      - name: Delete dev
        if: ${{ github.event_name == 'delete' && startsWith(github.event.ref, 'dev-') }}
        uses: chanzuckerberg/github-actions/.github/actions/deploy-happy-stack@v1.4.0
        with:
          stack-name: ${{ env.STACK_NAME }}
          operation: "delete"
          tfe-token: ${{ secrets.TFE_TOKEN }}
          env: "dev"
