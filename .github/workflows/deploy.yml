name: Deploy Changes to Cluster

on:
  push:
    branches:
      - main
    tags:
      - "v*"

jobs:
  prod:
    name: deploy to production
    runs-on: ubuntu-latest
    if: github.repository == 'chanzuckerberg/napari-hub' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 900
      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ECR_REPO }}
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Install happy dependencies
        run: |
          pip install --upgrade pip
          pip install -r .happy/requirements.txt
      - name: Deploy Changes
        shell: bash
        env:
          ENV: prod
          TFE_TOKEN: ${{ secrets.TFE_TOKEN }}
        run: |
          scripts/happy --profile="" --env prod update prod
  staging:
    name: deploy to staging
    runs-on: ubuntu-latest
    if: github.repository == 'chanzuckerberg/napari-hub' && github.ref == 'refs/heads/main'
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 900
      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ECR_REPO }}
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Install happy dependencies
        run: |
          pip install --upgrade pip
          pip install -r .happy/requirements.txt
      - name: Deploy Changes
        shell: bash
        env:
          ENV: staging
          TFE_TOKEN: ${{ secrets.TFE_TOKEN }}
        run: |
          scripts/happy --profile="" --env staging update staging
