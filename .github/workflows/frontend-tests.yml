# Workflow for running several tests for PRs and pushes to the main branch for
# napari hub frontend code.

name: Frontend Tests

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
  pull_request:
    branches:
      - '**'
    paths:
      - 'frontend/**'

defaults:
  run:
    working-directory: frontend/

jobs:
  # Runs several tests on the frontend codebase to check for code style,
  # formatting, best practices, and run unit/integration tests.
  tests:
    name: ${{ matrix.name }}
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Get Yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      # cache both yarn-lock and node_modules
      - name: Setup Yarn cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            **/node_modules
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # --prefer-offline forces yarn to use cache if available
      - name: Install dependencies with yarn
        run: yarn install --prefer-offline --frozen-lockfile

      - name: ${{ matrix.name }}
        run: ${{ matrix.run }}

    # Run linters and tests as matrix strategies so that they:
    #   1. Show up as separate GitHub checks.
    #   2. So we can reuse the Node.js and Yarn installation steps
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: prettier
            run: yarn lint:prettier

          - name: stylelint
            run: yarn lint:stylelint

          - name: eslint
            run: yarn lint:eslint

          - name: jest
            run: yarn test

          - name: tsc
            run: yarn type-check

  # Run E2E tests on different browsers.
  e2e:
    needs: tests
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        # TODO Look into adding support for Edge and Webkit testing
        # TODO Re-enable firefox when tests aren't flaky
        browser: [chromium]

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Get Yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      # cache both yarn-lock and node_modules
      - name: Setup Yarn cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            **/node_modules
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # --prefer-offline forces yarn to use cache if available
      - name: Install dependencies with yarn
        run: yarn install --prefer-offline --frozen-lockfile

      - name: Build for production
        run: yarn build

      - name: Start mock server on port 8081
        run: yarn dev:api &

      - name: Start server on port 8080
        run: yarn start &
        env:
          NODE_ENV: production

      - name: Install playwright
        run: npx playwright install --with-deps

      - name: Run E2E Tests for ${{ matrix.browser }}
        env:
          BROWSER: ${{ matrix.browser }}
        run: yarn e2e
