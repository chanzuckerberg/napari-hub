version: '3.8'

services:
  localstack:
    image: localstack/localstack@sha256:7c6635493185d25165979995fb073fd789c72b6d8b17ef3a70b798d55576732f
    platform: linux/amd64
    ports:
      - '4566:4566'
    environment:
      - HOSTNAME_EXTERNAL=localstack
      - SERVICES=s3,secretsmanager
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
      - PORT_WEB_UI=${PORT_WEB_UI- }
      - HOST_TMP_FOLDER=${TMPDIR}
      - DEFAULT_REGION=us-west-2
    volumes:
      - localstack:/tmp/localstack
    networks:
      naparinet:
        aliases:
          - localstack.naparinet.local
  frontend:
    image: '${DOCKER_REPO}napari-hub-dev-frontend'
    platform: linux/amd64
    build:
      context: frontend
      cache_from:
        - '${DOCKER_REPO}napari-hub-dev-frontend:${STACK_NAME}'
      args:
        - BUILDKIT_INLINE_CACHE=1
        - HAPPY_COMMIT
        - HAPPY_BRANCH
        - HAPPY_TAG
        - ENV
    restart: always
    depends_on:
      - backend
    ports:
      - '8080:8080'
    environment:
      - AWS_DEFAULT_REGION=us-west-2
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - BOTO_ENDPOINT_URL=http://localstack:4566
      - API_URL=http://backend.naparinet.local:5000/
    volumes:
      - ./frontend:/app
      - /app/node_modules/
      - /app/.next/
    networks:
      naparinet:
        aliases:
          - frontend.naparinet.local
  backend:
    image: '${DOCKER_REPO}napari-hub-dev-backend'
    platform: linux/amd64
    build:
      context: backend
      cache_from:
        - '${DOCKER_REPO}napari-hub-dev-backend:${STACK_NAME}'
      args:
        - BUILDKIT_INLINE_CACHE=1
        - HAPPY_COMMIT
        - HAPPY_BRANCH
        - HAPPY_TAG
    restart: always
    depends_on:
      - localstack
    ports:
      - '5000:5000'
    environment:
      - PYTHONUNBUFFERED=1
      - AWS_DEFAULT_REGION=us-west-2
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - BOTO_ENDPOINT_URL=http://localstack:4566
      - BUCKET=imaging-test-napari-hub
    # This entrypoint only used for local dev; in cloud we deploy as a Lambda container
    entrypoint: gunicorn --worker-class gevent --workers 4 --bind 0.0.0.0:5000 napari:app --max-requests 10000 --timeout 5 --keep-alive 5 --log-level info --reload
    volumes:
      - ./backend:/var/task
    networks:
      naparinet:
        aliases:
          - backend.naparinet.local
  plugins:
    image: '${DOCKER_REPO}napari-hub-dev-plugins'
    platform: linux/amd64
    build:
      context: plugins
      cache_from:
        - '${DOCKER_REPO}napari-hub-dev-plugins:${STACK_NAME}'
      args:
        - BUILDKIT_INLINE_CACHE=1
        - HAPPY_COMMIT
        - HAPPY_BRANCH
        - HAPPY_TAG
    restart: always
    depends_on:
      - localstack
    ports:
      - '5000:5000'
    environment:
      - PYTHONUNBUFFERED=1
      - AWS_DEFAULT_REGION=us-west-2
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - BOTO_ENDPOINT_URL=http://localstack:4566
      - BUCKET=imaging-test-napari-hub
    # This entrypoint only used for local dev; in cloud we deploy as a Lambda container
    entrypoint: gunicorn --worker-class gevent --workers 4 --bind 0.0.0.0:5000 napari:app --max-requests 10000 --timeout 5 --keep-alive 5 --log-level info --reload
    volumes:
      - ./plugins:/var/task
    networks:
      naparinet:
        aliases:
          - plugins.naparinet.local
networks:
  naparinet:
volumes:
  localstack:
